@model IdentitySample.Models.EditUserViewModel

@{
    ViewBag.Title = "USUARIOS: Edición";
}

<div class="container">
    <div class="row col-md-offset-1 col-md-10">
        <h1 class="centrado">@ViewBag.Title </h1>
        <br />

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                <hr />
                @*@Html.ValidationSummary(true)*@
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.Nombres, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Nombres, new { @class = "form-control", @maxlength = "50", @onkeypress = "return soloLetras(event);", @onCopy = "return false;", @onDrag = "return false;", @onDrop = "return false;", @onPaste = "return false;", @autocomplete = "off", @required = "required" })
                        @Html.ValidationMessageFor(model => model.Nombres, "Campo requerido")
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Apellidos, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Apellidos, new { @class = "form-control", @maxlength = "50", @onkeypress = "return soloLetras(event);", @onCopy = "return false;", @onDrag = "return false;", @onDrop = "return false;", @onPaste = "return false;", @autocomplete = "off", @required = "required" })
                        @Html.ValidationMessageFor(model => model.Apellidos, "Campo requerido")
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @type = "email", @required = "required" })
                        @Html.ValidationMessageFor(model => model.Email, "Campo requerido")
                    </div>
                </div>
                <div class="form-group">
                    <fieldset>
                        <legend>Roles:</legend>
                        <span class=" col-md-10">
                            @foreach (var item in Model.RolesList)
                            {
                                <input type="checkbox" name="SelectedRole" id="@item.Value" value="@item.Value" checked="@item.Selected" class="checkbox-inline" />
                                <label class="control-label" for="@item.Value">@item.Value</label>
                            }
                        </span>
                    </fieldset>
                </div>
                <br />

                <div class="form-group">
                    <div class="col-md-offset-1 col-md-11">
                        @Html.ActionLink("Cancelar", "Index", "UsersAdmin", null, htmlAttributes: new { @class = "btn btn-danger" })
                        <input type="submit" value="Guardar cambios" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="col-md-1"></div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval");
    <script type="text/javascript">

    function soloLetras(e) {
        key = e.keyCode || e.which;
        tecla = String.fromCharCode(key).toLowerCase();
        letras = " áéíóúabcdefghijklmnñopqrstuvwxyz";
        especiales = [8, 37, 39, 46];

        tecla_especial = false
        for (var i in especiales) {
            if (key == especiales[i]) {
                tecla_especial = true;
                break;
            }
        }

        if (letras.indexOf(tecla) == -1 && !tecla_especial)
            return false;
        }

    </script>

}
