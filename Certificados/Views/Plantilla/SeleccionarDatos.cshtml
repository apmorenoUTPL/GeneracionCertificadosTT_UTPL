@model Certificados.Models.Plantillas

@{
    ViewBag.Title = "DATOS: Selección de archivo";
    var listaObservacionesCSV = (List<string>)ViewData["listaObservaciones"];
}

<div class="container">
    <div class="row col-md-offset-1 col-md-10">
        <h1 class="centrado">@ViewBag.Title</h1>
        <br />

        <h2>Plantilla en uso: "@Model.name"</h2>
        <br />

        <p>
            En esta página, usted puede cargar los datos que aparecerán en los documentos a generarse utilizando la plantilla seleccionada.
            Para hacerlo, deberá subir un archivo en formato CVS para cargar los datos al sistema y los documentos se generarán de forma
            automática.
        </p>
        <p>
            <strong>IMPORTANTE:</strong> La información cargada en el archivo CVS debe corresponder con los campos habilitados en la
            plantilla subida en el sistema. En caso que existan datos con campos inhabilitados, estos no aparecerán en los documentos.
            Por otra parte, si existiesen campos habilitados en la plantilla pero no se cargan los datos correspondientes en el archivo
            CVS, estos no aparecerán en el documento.
        </p>
        <p>
            Para continuar, seleccione el archivo CVS y presione el botón <strong>"Subir archivo"</strong>.
        </p>

        @if (!String.IsNullOrWhiteSpace(ViewBag.Mensaje))
        {
            <div class="text-danger">
                <p>
                    <strong>NOTA:</strong> @ViewBag.Mensaje
                </p>
            </div>
        }

        @if (ViewBag.Observaciones)
        {
            <div>
                <hr />
                <h5>Observaciones:</h5>
                <ul>
                    @foreach (var item in listaObservacionesCSV)
                    {
                        <li>@item</li>
                    }
                </ul>
                <hr />
            </div>
        }
        <br />

        @using (@Html.BeginForm("CargarDatos", "Plantilla", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    <div class="col-md-offset-1 col-md-11">
                        @Html.HiddenFor(m => m.Id)
                    </div>
                    <div class="col-md-1">
                        @Html.Label("file", "Archivo:")
                    </div>
                    <div class="col-md-11">
                        @Html.TextBox("file", "", new { type = "file", accept = ".csv", required = "required" })
                        @Html.ValidationMessage("file", "*Debe seleccionar un archivo en formato CSV", new { @class = "text-danger" })
                    </div>
                </div><br />
                <div class="form-group">
                    <div class="col-md-offset-1 col-md-11">
                        @Html.ActionLink("Cancelar", "AdministrarPlantillas", "Plantilla", null, htmlAttributes: new { @class = "btn btn-danger" })
                        <input type="submit" value="Subir archivo" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="col-md-1"></div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}